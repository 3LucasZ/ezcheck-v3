# Compose file for the EZ-Check Webapp
# Spins up a NextJS Webserver Container and PostgreSQL Database Container

# Recall:
# 700(2) -> 5432
# 300(2) -> 3000
version: "3.0"
services:
  db:
    platform: ${ARCH} # change based on host
    image: postgres
    container_name: "ezcheck-db"
    ports:
      - "7002:5432"
    environment:
      - POSTGRES_USER=${CMP_PG_USER}
      - POSTGRES_PASSWORD=${CMP_PG_PW}
      - POSTGRES_DB=${CMP_PG_DB}
    volumes:
      - db:/var/lib/postgresql/data
    restart: always
  app:
    platform: ${ARCH} # change based on host
    image: daftdove/ezcheck-app:latest
    container_name: ezcheck-app
    depends_on: # wait for postgres container to be spun before running prisma migrate
      - db
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - "linux/amd64" # change based on what platform you want to build for
      args:
        NEXT_PUBLIC_CLIENTVAR: "clientvar"
    user: root # allows you to generate certificates without password during start.sh
    extra_hosts:
      - "host.docker.internal:host-gateway"
    working_dir: /app
    ports:
      - "3002:3000"
    environment: #change @<name>-db to container name of db service
      - DATABASE_URL=postgresql://${CMP_PG_USER}:${CMP_PG_PW}@ezcheck-db:5432/${CMP_PG_DB}
      - GOOGLE_ID=${GOOGLE_ID}
      - GOOGLE_SECRET=${GOOGLE_SECRET}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NODEMAILER_PW=${NODEMAILER_PW}
      - NODEMAILER_EMAIL=${NODEMAILER_EMAIL}
      - BASE_URL=${BASE_URL}
    restart: always
volumes:
  db:
    driver: local
# NOTE: DATABASE_URL=postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=SCHEMA
